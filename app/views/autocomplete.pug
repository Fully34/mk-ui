doctype html
html

	head
		include ./shared/head
		link(rel="stylesheet", type="text/css", href="/dist/css/autocomplete.css")

	body

		include ./shared/header

		main.container.documentation
			p
				em
					| Autocomplete inherits from Selectmenu. For a detailed list of inherited members and events, visit&nbsp;
					a(href="/selectmenu")
						| Selectmenu.
			h2
				| Examples
			p
				| Autocomplete comes with a ton of opt-in behaviors and functionality. Below we've set up a few different examples, breaking out some of the features you can add to your instances.
			div.row
				div.col-sm-4
					section.panel
						header.panel-heading
							h2.panel-title Static Data
						div.panel-body
							div.mk-ac-root
								input(
									type="text",
									class="mk-ac",
									placeholder="Movie Genres",
									name="symbol-1")
				div.col-sm-4
					section.panel
						header.panel-heading
							h2.panel-title Up to Four Selections
						div.panel-body
							div.mk-ac-root
								input(
									type="text",
									class="mk-ac",
									placeholder="Movie Genres",
									name="symbol-2",
									data-limit="4")
				div.col-sm-4
					section.panel
						header.panel-heading
							h2.panel-title Remote URLs
						div.panel-body
							div.mk-ac-root#remote
								input(
									type="text",
									class="mk-ac",
									placeholder="Search for a symbol",
									name="symbol-1",
									data-limit="4")
			div.row
				div.col-sm-6
					section.panel
						header.panel-heading
							h2.panel-title Comma Seperate
						div.panel-body
							div.mk-ac-root
								input(
									type="text",
									class="mk-ac",
									placeholder="Movie Genres",
									name="symbol-3",
									data-limit="4",
									data-comma="true")
				div.col-sm-6
					section.panel
						header.panel-heading
							h2.panel-title Only Allow Result Selections
						div.panel-body
							div.mk-ac-root
								input(
									type="text",
									class="mk-ac",
									placeholder="Movie Genres",
									name="symbol-4",
									data-limit="4",
									data-anything="false")
			div.row
				div.col-sm-12
					section.panel
						header.panel-heading
							h2.panel-title Removed Tag UI
						div.panel-body
							div.mk-ac-root
								input(
									type="text",
									class="mk-ac",
									placeholder="Movie Genres",
									name="symbol-5",
									data-comma="true",
									data-notags="true")

			include ./shared/events
			include ./shared/api
		include ./shared/scripts
		script(type="text/javascript", src="/dist/js/selectmenu.min.js")
		script(type="text/javascript", src="/dist/js/autocomplete.min.js")
		script.

			Mk.transitions(true);

			var inputs = $('.mk-ac-root'),
				Autocomplete = Mk.get('Autocomplete'),
				autocomplete;

			inputs.each(function (i) {

				if (this.id && this.id === 'remote') {

					autocomplete = new Autocomplete(this, {
						remote: 'http://dev.markitondemand.com/MODApis/Api/v2/Lookup/jsonp?input={{%query}}',
						type: 'jsonp'
					});

					autocomplete.on('create.taglabel', function (data) {
							data.label = data.raw.value;
					});

					autocomplete.on('request.success', function (q, d) {
						this.each(d, function (i, o) {
							o.label = o.Name,
							o.value = o.Symbol
						});
					});
				}
				else {

					autocomplete = new Autocomplete(this, {
						data: [{
							label: 'Comedy',
							value: 'Comedy'
						},
						{
							label: 'Horror',
							value: 'Horror'
						},
						{
							label: 'Thriller',
							value: 'Thriller'
						},
						{
							label: 'Disney',
							value: 'Disney'
						},
						{
							label: 'Action',
							value: 'Action'
						},
						{
							label: 'Adventure',
							value: 'Adventure'
						},
						{
							label: 'Fantasy',
							value: 'Fantasy'
						},
						{
							label: 'SyFi',
							value: 'SyFi'
						},
						{
							label: 'Drama',
							value: 'Drama'
						},
						{
							label: 'Romance',
							value: 'Romance'
						},
						{
							label: 'Independent',
							value: 'Independent'
						}]
					});
				}


				autocomplete.on('activate', function (node, keyboard) {

					if (keyboard) {

						var data = this.unflatten(
								node.attr('data-value'));

						this.input.val(data.value);
					}
				});

				autocomplete.on('change', function () {
					console.info('selections (raw):', this.selections);
					console.info('value (base64):', this.value)
				});
			});
